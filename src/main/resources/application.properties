server.port=${PORT:2019}

# postgres://hyvpnorbcbeyrz:3348bf39899d44edce6956df107442be70f1f242aec1d239f325af64815203ee@ec2-107-21-94-185.compute-1.amazonaws.com:5432/dd81kl5v5hmsft
# posgress://username      :password                                                        @url host                                 :5432/dbname
# MYDBHOST
# MYDBNAME
# MYDBUSER
# MYDBPASSWORD

# Begin h2 configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true
# End h2 configuration
# Should we use createBlob from java.sql.connection. PostgreSQL requires it to be true.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# What do with the schema
# drop n create table again, good for testing
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always
# Good for production!
# spring.jpa.hibernate.ddl-auto=update
# spring.datasource.initialization-mode=never
# Feature that determines what happens when no accessors are found for a type
# (and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.fail-on-empty-beans=false
# keeps a transaction inside of the same entity manager
# This property register an EntityManager to the current thread,
# so you will have the same EntityManager until the web request is finished.
spring.jpa.open-in-view=true
# Shows the generated and custom SQL but does hurt performance and the logs get full fast
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
# Turns off Spring Boot automatic exception handling
server.error.whitelabel.enabled=false
